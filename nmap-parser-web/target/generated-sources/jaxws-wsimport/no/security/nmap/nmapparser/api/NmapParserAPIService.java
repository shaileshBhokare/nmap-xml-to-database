
package no.security.nmap.nmapparser.api;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "NmapParserAPIService", targetNamespace = "http://api.nmapparser.nmap.security.no/", wsdlLocation = "file:/home/chrisad/NetBeansProjects/nmap-xml-to-database/nmap-parser-web/src/wsdl/localhost_8080/NmapParserAPIService/NmapParserAPI.wsdl")
public class NmapParserAPIService
    extends Service
{

    private final static URL NMAPPARSERAPISERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(no.security.nmap.nmapparser.api.NmapParserAPIService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = no.security.nmap.nmapparser.api.NmapParserAPIService.class.getResource(".");
            url = new URL(baseUrl, "file:/home/chrisad/NetBeansProjects/nmap-xml-to-database/nmap-parser-web/src/wsdl/localhost_8080/NmapParserAPIService/NmapParserAPI.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/home/chrisad/NetBeansProjects/nmap-xml-to-database/nmap-parser-web/src/wsdl/localhost_8080/NmapParserAPIService/NmapParserAPI.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        NMAPPARSERAPISERVICE_WSDL_LOCATION = url;
    }

    public NmapParserAPIService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NmapParserAPIService() {
        super(NMAPPARSERAPISERVICE_WSDL_LOCATION, new QName("http://api.nmapparser.nmap.security.no/", "NmapParserAPIService"));
    }

    /**
     * 
     * @return
     *     returns NmapParserAPI
     */
    @WebEndpoint(name = "NmapParserAPIPort")
    public NmapParserAPI getNmapParserAPIPort() {
        return super.getPort(new QName("http://api.nmapparser.nmap.security.no/", "NmapParserAPIPort"), NmapParserAPI.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NmapParserAPI
     */
    @WebEndpoint(name = "NmapParserAPIPort")
    public NmapParserAPI getNmapParserAPIPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://api.nmapparser.nmap.security.no/", "NmapParserAPIPort"), NmapParserAPI.class, features);
    }

}
